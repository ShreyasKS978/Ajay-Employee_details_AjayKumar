version: '3.8'

services:
  frontend:
    container_name: Frontend
    build: ./Frontend
    ports:
      - "8110:80"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy

  backend:
    container_name: Backend-employee
    build: ./Backend
    ports:
      - "3029:3029"
    environment:
      DB_USER: postgres
      DB_PASSWORD: admin123
      DB_HOST: postgres  # Using service name (correct)
      DB_PORT: 5432      # Internal port (correct)
      DB_NAME: auth_db
      EMPLOYEE_PORT: 3029
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3029/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    container_name: postgres-employee
    image: postgres:16
    ports:
      - "6588:5432"  # External:Internal
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres_data: